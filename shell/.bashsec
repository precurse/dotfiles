#!/bin/bash

function docksec {
    CMD="sudo docker run -v ${PWD}:/data --user ${UID}:$(id -g) -it precurse/security-tools"
    command ${CMD} $@
}

# Python HTTP one-liners (default port 80)
if [ -x "$(command -v python3 2>/dev/null)" ]; then
  pyhttp() { command python3 -m http.server ${1:-80}; }

elif [ -x "$(command -v python2 2>/dev/null)" ]; then
  pyhttp() { command python -m SimpleHTTPServer ${1:-80}; }
fi

# Python FTP one-liners (default port 21)
if command python3 -c "import pyftpdlib" &>/dev/null; then
  pyftp() { command python -m pyftpdlib -p${1:-21};  }
  pyftpdl() { command python -m pyftpdlib -p${1:-21} -w; }

elif command python2 -c "import pyftpdlib" &>/dev/null; then
  pyftp() { command python -m pyftpdlib -p${1:-21};  }
  pyftpdl() { command python -m pyftpdlib -p${1:-21} -w; }
fi

# NCAT one-liners (default port 5555)
if [ -x "$(command -v ncat)" ]; then
  NCAT_CMD="script ncat_output.txt command ncat -v --nodns --keep-open --listen"
  ncl() { command $NCAT_CMD ${1:-5555}; }
  ncls() { command $NCAT_CMD --ssl ${1:-5555}; }
  ncdl() { command $NCAT_CMD ${1:-5555} > "$2" ;  }
  ncdls() { command $NCAT_CMD --ssl ${1:-5555} > "$2";  }

elif [ -x "$(command -v nc)" ]; then
  # Fallback to nc - no TLS support
  NC_CMD="script ncat_output.txt command nc -vnkl"
  ncl() { command $NC_CMD ${1:-5555}; }
  ncdl() { command $NC_CMD ${1:-5555} > "$@";  }
fi

function enmap {
  T_FILE="target.txt"

  case "$1" in
    nmap)
      nmap_run "$@"
      ;;
    dns)
      dns_run "$@"
      ;;
    http)
      http_run
      ;;
    *)
      echo "Use nmap, dns, or http"
  esac
}

function nmap_run {
  TIMESTAMP=$(date +%s)
  NMAP_CMD="nmap -v --open -oA nmap_${TIMESTAMP}"

  if [ -n "$3" ]; then
    TARGET="${3}"
  elif [ -r ${T_FILE} ]; then
    echo "Using ${T_FILE}"
    TARGET="-iL ${T_FILE}"
  else
    echo "No target set or target.txt found"
    echo "Usage: enmap nmap <type> <ip/network>"
    return 1
  fi

  case "$2" in
    quick)
      NMAP_FLAGS=""
      ;;
    full)
      NMAP_FLAGS="-sC -sV -p-"
      ;;
    udp)
      NMAP_FLAGS="-sU --top 1000"
      ;;
    vuln)
      NMAP_FLAGS="-sV --script vulnscan"
      ;;
    *)
      echo "Use quick, full, udp, or vuln. Not $2"
  esac

  echo "Running: ${NMAP_CMD} ${NMAP_FLAGS} ${TARGET}"
  ${NMAP_CMD} ${NMAP_FLAGS} ${TARGET}

}

function dns_run {
  # dns recon / zone transfer test
  return 0
}

function http_run () {
  # nikto
  return 0
}

# Target
function newtarget {
  if [ "$#" -ne 1 ]; then
    echo "Must specify a target"
  else
    mcd "${1}"
    echo "${1}" > target.txt
  fi
}

